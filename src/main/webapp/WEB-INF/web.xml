<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" metadata-complete="true" version="3.0" 
		 xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name>Java Review</display-name>

  	<!-- ####################################################### -->
  	<!-- ################## Spring Context ##################### -->
  	<!-- ####################################################### -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:context.xml</param-value>
	</context-param>
	
	  <!-- Add Support for Spring -->
  	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
  	</listener>

	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>
	
	<!-- ####################################################### -->
  	<!-- #################### Spring MVC ####################### -->
  	<!-- ####################################################### -->
  	<servlet>
		<servlet-name>mvc-dispatcher</servlet-name>
		<servlet-class>
        	org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
       	<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
 
	<servlet-mapping>
		<servlet-name>mvc-dispatcher</servlet-name>
		<url-pattern>/springmvc/*</url-pattern>
	</servlet-mapping>

	<!-- ####################################################### -->
  	<!-- #### Spring JPA Open EntityManager In View Filter ##### -->
  	<!-- ####################################################### -->
  	<!--
	<filter>
    	<filter-name>entityManagerInViewFilter</filter-name>
    	<filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
  	</filter>

	<filter-mapping>
	   	<filter-name>entityManagerInViewFilter</filter-name>
	    <servlet-name>exporter</servlet-name>
	</filter-mapping>
  	-->
  
  	<!-- ####################################################### -->
  	<!-- ####################### jsf ########################### -->
  	<!-- ####################################################### -->
  	
    <!-- Change to "Production" when you are ready to deploy -->
    <context-param>
    	<param-name>javax.faces.PROJECT_STAGE</param-name>
    	<param-value>Development</param-value>
  	</context-param>
  	
  	<!-- JSF mapping -->
  	<servlet>
    	<servlet-name>Faces Servlet</servlet-name>
    	<servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    	<load-on-startup>1</load-on-startup>
  	</servlet>
  
  	<!-- Welcome page -->
  	<welcome-file-list>
    	<welcome-file>faces/jsf/hello.xhtml</welcome-file>
  	</welcome-file-list>
  
    <!-- Map these files with JSF -->
  	<servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>/faces/*</url-pattern>
  	</servlet-mapping>
  	<servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.jsf</url-pattern>
  	</servlet-mapping>
  	<servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.faces</url-pattern>
  	</servlet-mapping>
  	<servlet-mapping>
    	<servlet-name>Faces Servlet</servlet-name>
    	<url-pattern>*.xhtml</url-pattern>
  	</servlet-mapping>
  
    <!-- ####################################################### -->
  	<!-- ######## JAX-RS REST Web Service via Jersey ########### -->
  	<!-- ####################################################### -->
  	
  	<servlet>
		<display-name>Jersey Servlet</display-name>
		<servlet-name>Jersey Servlet</servlet-name>
		<servlet-class>
			com.sun.jersey.spi.spring.container.servlet.SpringServlet
			<!-- Use following if now use with spring -->
			<!-- com.sun.jersey.spi.container.servlet.ServletContainer -->
		</servlet-class>
		<init-param>
			<param-name>
            	com.sun.jersey.config.property.packages
            </param-name>
			<param-value>ca.liu.ws.rest.jersey</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey Servlet</servlet-name>
		<url-pattern>/jersey/*</url-pattern>
	</servlet-mapping>
	
	<!-- ####################################################### -->
  	<!-- ########### JAX-WS SOPA Web Service via cxf ########### -->
  	<!-- ####################################################### -->
  	
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/cxf/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- ####################################################### -->
  	<!-- ######## JAX-RS REST Web Service via restEasy ######### -->
  	<!-- ####################################################### -->
  	
  	<!--
  	<context-param>
		<param-name>resteasy.resources</param-name>
		<param-value>ca.liu.ws.rest</param-value>
	</context-param>
 
	<listener>
		<listener-class>
			org.jboss.resteasy.plugins.server.servlet.ResteasyBootstrap
      	</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>resteasy-servlet</servlet-name>
	   	<servlet-class>
			org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher
      	</servlet-class>
	</servlet>
 
	<servlet-mapping>
		<servlet-name>resteasy-servlet</servlet-name>
		<url-pattern>/resteasy/*</url-pattern>
	</servlet-mapping>
	-->
	
  	<!-- ####################################################### -->
  	<!-- ####################### struts2 ####################### -->
  	<!-- ####################################################### -->
  	
  	<!-- struts2 mapping -->
  	<!--
    <filter>
        <filter-name>struts2</filter-name>
        <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>struts2</filter-name>
        <url-pattern>/struts/*</url-pattern>
    </filter-mapping>
	-->
	
</web-app>