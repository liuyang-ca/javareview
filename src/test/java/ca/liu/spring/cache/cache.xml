<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx 
       	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     	   http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
     	   http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
     	   http://www.springframework.org/schema/cache
     	   http://www.springframework.org/schema/cache/spring-cache.xsd">
       	   
	<!-- annotation scan -->
	<context:component-scan base-package="ca.liu.spring.dao.hibernateImpl"/>
	
	<!-- use ehcache -->
	<!--
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
	<ehcache:annotation-driven cache-manager="ehCacheManager" />
	-->
	
	<!-- use spring cache abstraction -->
	<cache:annotation-driven/>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="ehcache.xml"/>

	<!-- Exception translation bean post processor, e.g. wrap library-specific-exception with generic exception -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	<!-- Logger injector -->
	<bean class="ca.liu.spring.beanpostprocessor.LoggerInjectorPostProcessor"/>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<value>classpath:hibernate.properties</value>
		</property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${hibernate.connection.driver_class}"/>
		<property name="jdbcUrl" value="${hibernate.connection.url}"/>
		<property name="user" value="${hibernate.connection.username}"/>
		<property name="password" value="${hibernate.connection.password}"/>
		<property name="maxPoolSize" value="${hibernate.c3p0.max_size}"/>
		<property name="minPoolSize" value="${hibernate.c3p0.min_size}"/>
		<property name="loginTimeout" value="${hibernate.c3p0.timeout}" />
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="ca.liu.domain"/>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.show_sql">true</prop>
			</props>					
		</property>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    	<property name="sessionFactory" ref="sessionFactory"/>
 	</bean>
 	
 	<!-- enable the configuration of transactional behavior based on annotations -->
  	<tx:annotation-driven transaction-manager="transactionManager"/>
 
</beans>